Assuming we need to release a report on sales performance for January 2021.
Note: To make a report for a different period, the only step that needs to be taken is changing conditions in WHERE clause.

  CREATE TEMPORARY TABLE month_sales AS
        SELECT *
        FROM balanced_tree.sales
        WHERE DATE_PART('year', start_txn_time) = 2021 AND DATE_PART('month', start_txn_time) = 1; 

1/ HIGH LEVEL SALES ANALYSIS
-- Total sales quantity, revenue (before discounts), discounts, and net revenue (after discounts) for all products
    SELECT    SUM(qty) AS Total_sales_quantity,
              SUM(qty*price) AS Total_revenue,
              ROUND(SUM(qty*price*discount/100.0), 2) AS Total_discount_value,
              ROUND(SUM(qty*price*(1-discount/100.0)), 2) AS Total_net_revenue
    FROM month_sales;

| total_sales_quantity | total_revenue | total_discount_value | total_net_revenue |
| -------------------- | ------------- | -------------------- | ----------------- |
| 14788                | 420672        | 51589.10             | 369082.90         |

Balanced Tree Clothing Company sold a total of 14,788 items, generated a revenue of $420,672, but offered a discount of $51,589.10, 
as a result, gaining a net revenue of $369,082.90 in January 2021.

2/ TRANSACTION ANALYSIS
-- Number of unique transactions, average unique products purchased in each transaction, the 25th, 50th and 75th percentile values for the net revenue per transaction, 
average discount value per transaction
    WITH member_trans AS (
      SELECT  txn_id,
      			  BOOL_OR(member) AS Member,
      			  COUNT(DISTINCT(prod_id)) AS Num_products,
      			  ROUND(SUM(qty*price*(1-discount/100.0)),2) AS Net_revenue,
      			  ROUND(SUM(qty*price*discount/100.0),2) AS Discount_value
      FROM month_sales
      GROUP BY  txn_id)
    
    SELECT 	COUNT(DISTINCT(txn_id)) AS Total_transactions,
    		    ROUND(AVG(Num_products)) AS Avg_products_per_transaction,
            CAST(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY Net_revenue) AS DECIMAL(10,2)) AS Perc_25th_net_revenue,
            CAST(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY Net_revenue) AS DECIMAL(10,2)) AS Perc_50th_net_revenue,
            CAST(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY Net_revenue) AS DECIMAL(10,2)) AS Perc_75th_net_revenue,
            ROUND(AVG(Discount_value),2) AS Avg_discount_value_per_transaction
    FROM member_trans;

| total_transactions | avg_products_per_transaction | perc_25th_net_revenue | perc_50th_net_revenue | perc_75th_net_revenue | avg_discount_value_per_transaction |
| ------------------ | ---------------------------- | --------------------- | --------------------- | --------------------- | ---------------------------------- |
| 828                | 6                            | 313.17                | 434.10                | 563.69                | 62.31                              |

There are 828 transactions made during January with an average number of products of 6 and an average discount value of $62.31. 
Of all transactions, 25% brought a revenue of above $563.69.

-- Percentage number of transactions, and average net revenue from member and non-members
    WITH member_trans AS (
      SELECT  	txn_id,
      			    BOOL_OR(member) AS Member,
      			    COUNT(DISTINCT(prod_id)) AS Num_products,
      			    ROUND(SUM(qty*price*(1-discount/100.0)),2) AS Net_revenue,
      			    ROUND(SUM(qty*price*discount/100.0),2) AS Discount_value
      FROM month_sales
      GROUP BY  txn_id)
    
    SELECT 	Member,
            ROUND(COUNT(Member) * 100/SUM(COUNT(Member)) OVER(), 2) AS Percentage_transactions,
            ROUND(AVG(Net_revenue),2) AS Avg_net_revenue
    FROM member_trans
    GROUP BY Member;

| member | percentage_transactions | avg_net_revenue |
| ------ | ----------------------- | --------------- |
| false  | 40.58                   | 436.71          |
| true   | 59.42                   | 451.93          |

A larger proportion of transactions came from members of Balanced Tree Clothing Company with an approximate ratio of 59:41. 
Although the corresponding average net revenue per transaction from members was more than that from nonmembers, the difference was not significant.

3/ PRODUCT ANALYSIS
-- Top 3 products by net revenue
    WITH net_revenue_details AS (
      SELECT 	product_name,
    		      ROUND(SUM(qty*s.price*(1-discount/100.0)),2) AS Net_revenue,
              RANK() OVER(ORDER BY SUM(qty*s.price*(1-discount/100.0)) DESC) AS Rank_net_revenue
      FROM month_sales s
      LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
      GROUP BY product_name)
    
    SELECT 	product_name,
		        Net_revenue
    FROM net_revenue_details
    WHERE Rank_net_revenue <= 3;

| product_name                 | net_revenue |
| ---------------------------- | ----------- |
| Grey Fashion Jacket - Womens | 61619.40    |
| Blue Polo Shirt - Mens       | 60674.22    |
| White Tee Shirt - Mens       | 44074.40    |

Grey Fashion Jacket, Blue Polo Shirt, and White Tee Shirt were ones producing the highest net revenue.

-- Total sales quantity, revenue, discount, net revenue for each segment
    SELECT 	segment_name,
    		    SUM(qty) AS Sales_quantity,
            SUM(qty*s.price) AS Revenue,
            ROUND(SUM(qty*s.price*discount/100.0),2) AS Discount_value,
            ROUND(SUM(qty*s.price*(1-discount/100.0)),2) AS Net_revenue
    FROM month_sales s
    LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
    GROUP BY segment_name
    ORDER BY segment_name ASC;

| segment_name | sales_quantity | revenue | discount_value | net_revenue |
| ------------ | -------------- | ------- | -------------- | ----------- |
| Jacket       | 3750           | 121650  | 14871.38       | 106778.62   |
| Jeans        | 3777           | 68777   | 8482.68        | 60294.32    |
| Shirt        | 3690           | 131638  | 16228.38       | 115409.62   |
| Socks        | 3571           | 98607   | 12006.66       | 86600.34    |

Among segments, Jeans were sold the most but yielded the lowest net revenue. Instead, the highest net revenue originated from Shirt segment with over $115,000.

-- Top selling product for each segment based on quantity and net revenue
    WITH segment_details AS (
      SELECT 	segment_name,
    			    product_name,
    			    SUM(qty) AS Sales_quantity,
            	RANK() OVER(PARTITION BY segment_name ORDER BY SUM(qty) DESC) AS Rank_sales_quantity
      FROM month_sales s
      LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
      GROUP BY segment_name, product_name
      ORDER BY segment_name ASC)
    
    SELECT 	segment_name,
    		    product_name AS Most_sold_products,
            Sales_quantity
    FROM segment_details
    WHERE Rank_sales_quantity = 1;

| segment_name | most_sold_products           | sales_quantity |
| ------------ | ---------------------------- | -------------- |
| Jacket       | Grey Fashion Jacket - Womens | 1300           |
| Jeans        | Cream Relaxed Jeans - Womens | 1282           |
| Shirt        | White Tee Shirt - Mens       | 1256           |
| Socks        | Navy Solid Socks - Mens      | 1264           |

    WITH segment_details AS (
      SELECT 	segment_name,
    			    product_name,
            	ROUND(SUM(qty*s.price*(1-discount/100.0)),2) AS Net_revenue,
            	RANK() OVER(PARTITION BY segment_name ORDER BY SUM(qty*s.price*(1-discount/100.0)) DESC) AS Rank_net_revenue
      FROM month_sales s
      LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
      GROUP BY segment_name, product_name
      ORDER BY segment_name ASC)
    
    SELECT 	segment_name,
    		    product_name AS Highest_net_revenue_products,
            Net_revenue
    FROM segment_details
    WHERE Rank_net_revenue = 1;

| segment_name | highest_net_revenue_products  | net_revenue |
| ------------ | ----------------------------- | ----------- |
| Jacket       | Grey Fashion Jacket - Womens  | 61619.40    |
| Jeans        | Black Straight Jeans - Womens | 34752.96    |
| Shirt        | Blue Polo Shirt - Mens        | 60674.22    |
| Socks        | Navy Solid Socks - Mens       | 39946.68    |


Diving deeper into each segment, Grey Fashion Jacket and Navy Solid Socks were top-selling products in the corresponding segment on both sales quantity and net revenue.

-- Total sales quantity, revenue, discount, net revenue for each category
    SELECT 	category_name,
    		    SUM(qty) AS Sales_quantity,
            SUM(qty*s.price) AS Revenue,
            ROUND(SUM(qty*s.price*discount/100.0),2) AS Discount_value,
            ROUND(SUM(qty*s.price*(1-discount/100.0)),2) AS Net_revenue
    FROM month_sales s
    LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
    GROUP BY category_name
    ORDER BY category_name ASC;

| category_name | sales_quantity | revenue | discount_value | net_revenue |
| ------------- | -------------- | ------- | -------------- | ----------- |
| Mens          | 7261           | 230245  | 28235.04       | 202009.96   |
| Womens        | 7527           | 190427  | 23354.06       | 167072.94   |

Compared to Mens category, Womens category had a higher sales quantity, but smaller net revenue. 
This is the result of the fact that men's product price generally is higher than women's product price.

-- Top selling product for each category based on quantity and net revenue
    WITH category_details AS (
      SELECT 	category_name,
    			    product_name,
    			    SUM(qty) AS Sales_quantity,
            	RANK() OVER(PARTITION BY category_name ORDER BY SUM(qty) DESC) AS Rank_sales_quantity
      FROM month_sales s
      LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
      GROUP BY category_name, product_name
      ORDER BY category_name ASC)
    
    SELECT 	category_name,
    		    product_name AS Most_sold_products,
            Sales_quantity
    FROM category_details
    WHERE Rank_sales_quantity = 1;

| category_name | most_sold_products           | sales_quantity |
| ------------- | ---------------------------- | -------------- |
| Mens          | Navy Solid Socks - Mens      | 1264           |
| Womens        | Grey Fashion Jacket - Womens | 1300           |

    WITH category_details AS (
      SELECT 	category_name,
    			    product_name,
      			  ROUND(SUM(qty*s.price*(1-discount/100.0)),2) AS Net_revenue,
            	RANK() OVER(PARTITION BY category_name ORDER BY SUM(qty*s.price*(1-discount/100.0)) DESC) AS Rank_net_revenue
      FROM month_sales s
      LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
      GROUP BY category_name, product_name
      ORDER BY category_name ASC)
    
    SELECT 	category_name,
            product_name AS Highest_net_revenue_products,
            Net_revenue
    FROM category_details
    WHERE Rank_net_revenue = 1;

| category_name | highest_net_revenue_products | net_revenue |
| ------------- | ---------------------------- | ----------- |
| Mens          | Blue Polo Shirt - Mens       | 60674.22    |
| Womens        | Grey Fashion Jacket - Womens | 61619.40    |

-- Percentage split of net revenue by product for each segment
    WITH product_segment AS (
      SELECT 	segment_name,
      			  product_name,
            	ROUND(SUM(qty*s.price*(1-discount/100.0)),2) AS Net_revenue
      FROM month_sales s
      LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
      GROUP BY segment_name, product_name)
    
    SELECT 	segment_name,
    		    product_name,
            ROUND(Net_revenue * 100/SUM(Net_revenue) OVER(PARTITION BY segment_name), 2) AS Percentage_net_revenue_in_segment
    FROM product_segment;

| segment_name | product_name                     | percentage_net_revenue_in_segment |
| ------------ | -------------------------------- | --------------------------------- |
| Jacket       | Indigo Rain Jacket - Womens      | 19.13                             |
| Jacket       | Khaki Suit Jacket - Womens       | 23.17                             |
| Jacket       | Grey Fashion Jacket - Womens     | 57.71                             |
| Jeans        | Navy Oversized Jeans - Womens    | 23.75                             |
| Jeans        | Black Straight Jeans - Womens    | 57.64                             |
| Jeans        | Cream Relaxed Jeans - Womens     | 18.62                             |
| Shirt        | White Tee Shirt - Mens           | 38.19                             |
| Shirt        | Blue Polo Shirt - Mens           | 52.57                             |
| Shirt        | Teal Button Up Shirt - Mens      | 9.24                              |
| Socks        | Navy Solid Socks - Mens          | 46.13                             |
| Socks        | White Striped Socks - Mens       | 19.85                             |
| Socks        | Pink Fluro Polkadot Socks - Mens | 34.02                             |

-- Percentage split of net revenue by segment for each category
    WITH segment_category AS (
      SELECT 	category_name,
      			  segment_name,
        	    ROUND(SUM(qty*s.price*(1-discount/100.0)),2) AS Net_revenue
      FROM month_sales s
      LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
      GROUP BY category_name, segment_name)
    
    SELECT 	category_name,
    		    segment_name,
            ROUND(Net_revenue * 100/SUM(Net_revenue) OVER(PARTITION BY category_name), 2) AS Percentage_net_revenue_in_category
    FROM segment_category;

| category_name | segment_name | percentage_net_revenue_in_category |
| ------------- | ------------ | ---------------------------------- |
| Mens          | Socks        | 42.87                              |
| Mens          | Shirt        | 57.13                              |
| Womens        | Jeans        | 36.09                              |
| Womens        | Jacket       | 63.91                              |

-- Percentage split of total revenue by category
    SELECT 	category_name,
            ROUND(SUM(qty*s.price*(1-discount/100.0)) * 100/SUM(SUM(qty*s.price*(1-discount/100.0))) OVER(), 2) AS Percentage_net_revenue
    FROM month_sales s
    LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
    GROUP BY category_name;

| category_name | percentage_net_revenue |
| ------------- | ---------------------- |
| Mens          | 54.73                  |
| Womens        | 45.27                  |

-- Total transaction “penetration” for each product
-- Check if any row has quantity sold of 0
    SELECT txn_id
    FROM month_sales
    WHERE qty < 1;
-- Check if the same product is entered more than one in the same transaction
    SELECT 	txn_id,
    		    COUNT(*) AS Num_products,
            COUNT(DISTINCT(prod_id)) AS Num_unique_products
    FROM month_sales
    GROUP BY txn_id
    HAVING COUNT(*) != COUNT(DISTINCT(prod_id));
-- Total transaction “penetration” for each product 
    SELECT 	product_name,
    		    ROUND(COUNT(txn_id) * 100.0/(SELECT COUNT(DISTINCT(txn_id)) FROM month_sales), 2) AS Penetration
    FROM month_sales s
    LEFT JOIN balanced_tree.product_details p ON s.prod_id = p.product_id
    GROUP BY product_name
    ORDER BY Penetration DESC;

| product_name                     | penetration |
| -------------------------------- | ----------- |
| Cream Relaxed Jeans - Womens     | 52.17       |
| Grey Fashion Jacket - Womens     | 52.05       |
| Navy Oversized Jeans - Womens    | 51.09       |
| Navy Solid Socks - Mens          | 50.72       |
| White Tee Shirt - Mens           | 50.24       |
| Blue Polo Shirt - Mens           | 49.88       |
| Teal Button Up Shirt - Mens      | 49.64       |
| Black Straight Jeans - Womens    | 49.28       |
| Indigo Rain Jacket - Womens      | 49.15       |
| Khaki Suit Jacket - Womens       | 48.55       |
| White Striped Socks - Mens       | 48.19       |
| Pink Fluro Polkadot Socks - Mens | 47.83       |

-- Top 3 combinations of 3 products purchased in a transaction
    WITH sales AS (
      SELECT 	txn_id,
      			  prod_id,
      			  product_name
      FROM month_sales s
      JOIN balanced_tree.product_details p ON s.prod_id = p.product_id)
    
    SELECT	s1.product_name Product_1,
        	  s2.product_name Product_2,
      		  s3.product_name Product_3,
            COUNT(s1.txn_id) AS Num_transactions
    FROM sales s1
    JOIN sales s2 ON s1.txn_id = s2.txn_id
    JOIN sales s3 ON s2.txn_id = s3.txn_id
    WHERE s1.prod_id < s2.prod_id AND s2.prod_id < s3.prod_id
    GROUP BY Product_1, Product_2, Product_3
    ORDER BY Num_transactions DESC
    LIMIT 3;

| product_1                    | product_2                     | product_3                     | num_transactions |
| ---------------------------- | ----------------------------- | ----------------------------- | ---------------- |
| White Tee Shirt - Mens       | Grey Fashion Jacket - Womens  | Teal Button Up Shirt - Mens   | 125              |
| Grey Fashion Jacket - Womens | Black Straight Jeans - Womens | Navy Solid Socks - Mens       | 125              |
| Grey Fashion Jacket - Womens | White Striped Socks - Mens    | Black Straight Jeans - Womens | 122              |
